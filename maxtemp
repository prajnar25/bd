import org.apache.hadoop.conf.Configuration; 
import org.apache.hadoop.fs.Path; 
import org.apache.hadoop.io.IntWritable; 
import org.apache.hadoop.io.Text; 
import org.apache.hadoop.mapreduce.Job; 
import org.apache.hadoop.mapreduce.Mapper; 
import org.apache.hadoop.mapreduce.Reducer; 
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat; 
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat; 
import java.io.IOException; 
public class MaxTemperature { 
public static class TemperatureMapper extends Mapper&lt;Object, Text, Text, IntWritable&gt; { 
private Text year = new Text(); 
private IntWritable temperature = new IntWritable(); 
public void map(Object key, Text value, Context context) throws IOException, 
InterruptedException { 
String[] line = value.toString().split(&quot; &quot;); 
if (line.length == 2) { 
year.set(line[0]); 
temperature.set(Integer.parseInt(line[1])); 
context.write(year, temperature); 
} 
} 
} 
public static class TemperatureReducer extends Reducer&lt;Text, IntWritable, Text, 
IntWritable&gt; { 
public void reduce(Text key, Iterable&lt;IntWritable&gt; values, Context context) throws 
IOException, InterruptedException { 
int maxTemp = Integer.MIN_VALUE; 
for (IntWritable val : values) { 
maxTemp = Math.max(maxTemp, val.get()); 
} 
context.write(key, new IntWritable(maxTemp)); 
} 
} 
public static void main(String[] args) throws Exception { 
Configuration conf = new Configuration(); 
Job job = Job.getInstance(conf, &quot;Max Temperature&quot;); 
job.setJarByClass(MaxTemperature.class); 
job.setMapperClass(TemperatureMapper.class); 
job.setReducerClass(TemperatureReducer.class); 
job.setOutputKeyClass(Text.class); 
job.setOutputValueClass(IntWritable.class); 
FileInputFormat.addInputPath(job, new Path(args[0])); 
FileOutputFormat.setOutputPath(job, new Path(args[1])); 
System.exit(job.waitForCompletion(true) ? 0 : 1); 
} 
} 
 
 
 
Execution Steps 
1. mkdir usn_prog2 
2. cd usn_prog2 
3. gedit MaxTemperature.java 
4. start-all.sh 
5. jps 
6. export HADOOP_CLASSPATH=$(hadoop classpath) 
7. mkdir Input 
8. cd Input 
9. gedit temperature_data.txt 
2001 32 
2001 35 
2002 30 
2002 28 
2003 33 
2003 36 
10. cd . .   
11. hadoop fs -mkdir /maxtemp_usn 
12. hadoop fs -mkdir /maxtemp_usn/Input 
 
13. hadoop fs -put ./Input/temperature_data.txt/ /maxtemp_usn/Input 
14. export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 
15. export PATH=$JAVA_HOME/bin:$PATH 
16. javac -classpath $(hadoop classpath) -d . MaxTemperature.java 
17. jar -cvf maxtemp.jar -C . . 
18. hadoop jar maxtemp.jar MaxTemperature /maxtemp_usn/Input  /maxtemp_usn/Input/output 
19. hadoop fs -cat /maxtemp_usn/Input/output/part-r-00000
